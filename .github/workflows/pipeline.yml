name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    concurrency: deploy-group

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Check style
        run: npm run eslint

      - name: Build project
        run: npm run build

      - name: Notify build failure on Discord
        if: ${{ failure() && steps.build.outcome == 'failure' }}
        uses: rjstone/discord-webhook-notify@v1.0.4
        with:
          severity: error
          details: |
            **Build Failed**
            Commit: ${{ github.sha }}
            Committer: ${{ github.actor }}
            Commit Message: ${{ github.event.head_commit.message }}
            [View commit on GitHub](${{ github.event.head_commit.url }})
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Run tests
        run: npm test

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy app to Fly.io
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
    steps:
      - uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send success notification to Discord
        if: ${{ success() }}
        uses: Ilshidur/action-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "GitHub Actions"
          content: |
            **New version tagged and pushed**: `${{ github.ref_name }}`
            **Commit**: `${{ github.sha }}`
            **By**: `${{ github.actor }}`
